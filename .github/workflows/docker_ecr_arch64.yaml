---
name: Build docker image for aarch64 (ECR)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - main
    paths:
      - "**.rs"
      - "**.toml"
      - ".github/workflows/docker_ecr_arch64.yaml"
    tags:
      - "unleash-edge-v[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        if: github.event_name != 'pull_request'
        with:
          role-to-assume: arn:aws:iam::726824350591:role/unleash-github-ecr-private-publish-role
          role-session-name: actions-push-to-ecr-private
          aws-region: eu-north-1
      - name: Login to ECR
        id: login-ecr-eu-north
        uses: aws-actions/amazon-ecr-login@v2
        if: github.event_name != 'pull_request'
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta configuration (set image and tag)
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ steps.login-ecr-eu-north.outputs.registry }}/unleash-edge
          tags: |
            type=ref,event=branch
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build tag and push image to Amazon ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: "type=gha,scope=build-linux-arm64-ecr"
          cache-to: "type=gha,scope=build-linux-arm64-ecr"

  notifypipeline:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 5
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Send to pipeline
        run: |
          bash ./.github/notify_pipeline.sh
        env:
          DOCKER_IMAGE: "726824350591.dkr.ecr.eu-north-1.amazonaws.com/unleash-edge"
