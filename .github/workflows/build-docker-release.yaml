---
name: Build docker image for Github and DockerHub
on:
  workflow_dispatch:
  push:
    branches:
      - main
    files:
      - "**.rs"
      - "**.toml"
      - ".github/workflows/build-docker-release.yaml"
    tags:
      - unleash-edge-v[0-9]+.*

jobs:
  dockerpublish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust
        run: |
          rustup set auto-self-update disable
          rustup toolchain install stable --profile default
          rustup show
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Install cross (cross compile)
        run: |
          cargo install cross
      - name: Build release for aarch64
        run: |
          cross build --release --target=aarch64-unknown-linux-musl
      - name: Build release for x86_64
        run: |
          cross build --release --target=x86_64-unknown-linux-musl
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta configuration (set image and tag)
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            unleashorg/unleash-edge
            ghcr.io/Unleash/unleash-edge
          tags: |
            type=edge
            type=semver,pattern={{ version }}
            type=semver,pattern={{ major }}.{{ minor }}
      - name: Build tag and push images
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile.publish
          context: .
          platforms: linux/arm64,linux/amd64
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
